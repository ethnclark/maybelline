/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";
import { Route as ProductIndexImport } from "./routes/product/index";
import { Route as ProductProductIdImport } from "./routes/product/$productId";
import { Route as AboutUsImport } from "./routes/about-us/index";

// Create/Update Routes
const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ProductIndexRoute = ProductIndexImport.update({
  id: "/product",
  path: "/product",
  getParentRoute: () => rootRoute,
} as any);

const ProductProductIdRoute = ProductProductIdImport.update({
  id: "/product/$productId",
  path: "/product/$productId",
  getParentRoute: () => rootRoute,
} as any);

const AboutUsRoute = AboutUsImport.update({
  id: "/about-us",
  path: "/about-us",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/product": {
      id: "/product";
      path: "/product";
      fullPath: "/product";
      preLoaderRoute: typeof ProductIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/product/$productId": {
      id: "/product/$productId";
      path: "/product/$productId";
      fullPath: "/product/$productId";
      preLoaderRoute: typeof ProductProductIdImport;
      parentRoute: typeof rootRoute;
    };
    "/about-us": {
      id: "/about-us";
      path: "/about-us";
      fullPath: "/about-us";
      preLoaderRoute: typeof AboutUsImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/product": typeof ProductIndexRoute;
  "/product/$productId": typeof ProductProductIdRoute;
  "/about-us": typeof AboutUsRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/product": typeof ProductIndexRoute;
  "/product/$productId": typeof ProductProductIdRoute;
  "/about-us": typeof AboutUsRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/product": typeof ProductIndexRoute;
  "/product/$productId": typeof ProductProductIdRoute;
  "/about-us": typeof AboutUsRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/product"
    | "/product/$productId"
    | "/about-us";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/product" | "/product/$productId" | "/about-us";
  id:
    | "__root__"
    | "/"
    | "/product"
    | "/product/$productId"
    | "/about-us";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ProductIndexRoute: typeof ProductIndexRoute;
  ProductProductIdRoute: typeof ProductProductIdRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProductIndexRoute: ProductIndexRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  AboutUsRoute: AboutUsRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/product/",
        "/product/$productId",
        "/about-us"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/product/": {
      "filePath": "product/index.tsx"
    },
    "/product/$productId": {
      "filePath": "product/$productId.tsx"
    },
    "/about-us": {
      "filePath": "about-us/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */